apiVersion: v1
kind: Namespace
metadata:
  name: roboshop

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata: 
  namespace: roboshop
  name: roboshop-admin
rules:
- apiGroups: [""]  # This indicates the core API group
  resources: ["*"]
  verbs: ["*"]  # Actions on resources: get, list, create, update, delete

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: roboshop-admin
  namespace: roboshop  # Change this to match the Role's namespace
subjects:  # You can specify more than one subject
- kind: User
  name: kops
  apiGroup: rbac.authorization.k8s.io  # Corrected the typo here
roleRef:
  # "roleRef" specifies the binding to a role / cluster role
  kind: Role  # This must be Role or ClusterRole
  name: roboshop-admin  # This must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
# configuration file for giving acces 
# we need click this command and edit this for changing roles and users
#kubectl get configmap aws-auth -n kube-system -o yaml
# aws sts get-caller-identity
# aws eks update-kubeconfig --region us-east-1 --name rbac

apiVersion: v1
data:
  mapRoles: |
    - groups:
      - system:bootstrappers
      - system:nodes
      rolearn: arn:aws:iam::590183758323:role/eksctl-rbac-nodegroup-eks-node-NodeInstanceRole-dPmctrfJTEvm
      username: system:node:{{EC2PrivateDNSName}}
  mapUsers: |
    - roboshop-admin
      - system:masters
      userarn: arn:aws:iam::590183758323:user/kops
      username: kops
kind: ConfigMap
metadata:
  creationTimestamp: "2024-10-29T03:59:29Z"
  name: aws-auth
  namespace: kube-system
  resourceVersion: "1397"
  uid: 0a6bf816-3877-4cb0-afd2-f93bd8bd713d
