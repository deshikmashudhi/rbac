apiVersion: v1
kind: Namespace
metadata:
  name: roboshop

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata: 
  namespace: roboshop
  name: roboshop-admin
rules:
- apiGroups: [""]  # Core API group
  resources: ["*"]
  verbs: ["*"]  # Actions on resources: get, list, create, update, delete

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: roboshop-cluster-reader
rules:
- apiGroups: ["v1", "apps/v1"]
  resources: ["secrets", "nodes", "namespaces", "persistentvolumes"]
  verbs: ["get", "watch", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: roboshop-admin
  namespace: roboshop
subjects:
- kind: User
  name: kops
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: roboshop-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: roboshop-cluster-reader
subjects: 
- kind: User
  name: kops
  apiGroup: rbac.authorization.k8s.io
roleRef: 
  kind: ClusterRole
  name: roboshop-cluster-reader
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-auth
  namespace: kube-system
data:
  mapRoles: |
    - groups:
      - system:bootstrappers
      - system:nodes
      rolearn: arn:aws:iam::590183758323:role/eksctl-rbac-nodegroup-eks-node-NodeInstanceRole-dPmctrfJTEvm
      username: system:node:{{EC2PrivateDNSName}}
  mapUsers: |
    - userarn: arn:aws:iam::590183758323:user/kops
      username: kops
      groups:
        - system:masters
    - userarn: arn:aws:iam::590183758323:user/roboshop-admin
      username: roboshop-admin
      groups:
        - system:masters
# configuration file for giving acces 
# we need click this command and edit this for changing roles and users
#kubectl get configmap aws-auth -n kube-system -o yaml
# aws sts get-caller-identity
# aws eks update-kubeconfig --region us-east-1 --name rbac